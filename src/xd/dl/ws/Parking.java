
package xd.dl.ws;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * <p>
 * An example of how this class may be used:
 * 
 * <pre>
* parking service = new parking();
* ParkingPortType portType = service.getParkingHttpSoap11Endpoint();
* portType.cancelParkingFee(...);
 * </pre>
 * </p>
 * 
 */
@WebServiceClient(name = "parking", targetNamespace = "http://service.geweb.com", wsdlLocation = "http://222.190.116.170:8089/APIService/services/parking?wsdl")
public class Parking extends Service {

	private final static URL PARKING_WSDL_LOCATION;
	private final static Logger logger = Logger.getLogger(xd.dl.ws.Parking.class.getName());

	static {
		URL url = null;
		try {
			URL baseUrl;
			baseUrl = xd.dl.ws.Parking.class.getResource(".");
//			url = new URL(baseUrl, "http://222.190.116.170:8089/APIService/services/parking?wsdl");
			url = new URL(Config.baseUrlJY);
		} catch (MalformedURLException e) {
			logger.warning(
					"Failed to create URL for the wsdl Location: 'http://222.190.116.170:8089/APIService/services/parking?wsdl', retrying as a local file");
			logger.warning(e.getMessage());
		}
		PARKING_WSDL_LOCATION = url;
	}

	public Parking(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public Parking() {
		super(PARKING_WSDL_LOCATION, new QName("http://service.geweb.com", "parking"));
	}

	/**
	 * 
	 * @return returns ParkingPortType
	 */
	@WebEndpoint(name = "parkingHttpSoap11Endpoint")
	public ParkingPortType getParkingHttpSoap11Endpoint() {
		return super.getPort(new QName("http://service.geweb.com", "parkingHttpSoap11Endpoint"), ParkingPortType.class);
	}

	/**
	 * 
	 * @return returns ParkingPortType
	 */
	@WebEndpoint(name = "parkingHttpSoap12Endpoint")
	public ParkingPortType getParkingHttpSoap12Endpoint() {
		return super.getPort(new QName("http://service.geweb.com", "parkingHttpSoap12Endpoint"), ParkingPortType.class);
	}

	/**
	 * 
	 * @return returns ParkingPortType
	 */
	@WebEndpoint(name = "parkingHttpEndpoint")
	public ParkingPortType getParkingHttpEndpoint() {
		return super.getPort(new QName("http://service.geweb.com", "parkingHttpEndpoint"), ParkingPortType.class);
	}

}
